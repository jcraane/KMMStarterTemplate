// Generated by KMM Resources
package dev.mobilerevolution.starter

class L {
  companion object {
    val app: App = App()
    val bottomTab: BottomTab = BottomTab()
    val driverStandings: DriverStandings = DriverStandings()
    val race: Race = Race()
  }
  class App {
    operator fun get(key: String): String? = when(key) {
      "title" -> title()
      else -> null
    }
  }
  data class BottomTab(
    val driverStandings: DriverStandings = DriverStandings(),
    val season: Season = Season()) {
    class DriverStandings {
      operator fun get(key: String): String? = when(key) {
        "tabLabel" -> tabLabel()
        else -> null
      }
    }
    class Season {
      operator fun get(key: String): String? = when(key) {
        "tabLabel" -> tabLabel()
        else -> null
      }
    }
  }
  class DriverStandings {
  }
  data class Race(
    val schedule: Schedule = Schedule()) {
    class Schedule {
      operator fun get(key: String): String? = when(key) {
        "firstPractice" -> firstPractice()
        "secondPractice" -> secondPractice()
        "thirdPractice" -> thirdPractice()
        "sprint" -> sprint()
        "qualifying" -> qualifying()
        "race" -> race()
        else -> null
      }
    }
  }
}


expect fun L.App.title(): String
expect fun L.BottomTab.DriverStandings.tabLabel(): String
expect fun L.BottomTab.Season.tabLabel(): String
expect fun L.DriverStandings.points(value0: String): String
expect fun L.Race.Schedule.firstPractice(): String
expect fun L.Race.Schedule.qualifying(): String
expect fun L.Race.Schedule.race(): String
expect fun L.Race.Schedule.secondPractice(): String
expect fun L.Race.Schedule.sprint(): String
expect fun L.Race.Schedule.thirdPractice(): String
